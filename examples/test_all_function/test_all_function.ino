
// This example is to test all posible function in this library

#include<PCF8814.h>

PCF8814 lcd;

// A custom glyph (a smiley)...
static const byte glyph[] = { B00010000, B00110100, B00110000, B00110100, B00010000 };

const unsigned char logo [] PROGMEM = {96,64,
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0xFF, 0xFF, 0x4F, 
0xDF, 0x17, 0x07, 0x8F, 0xFF, 0x5F, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0x7F, 0x7F, 0x1F, 0x17, 0x3F, 0x37, 0x07, 0x1F, 0x7F, 0xFF, 0x7F, 
0x77, 0x1F, 0x8F, 0x0F, 0x07, 0x1F, 0x7F, 0x3F, 0x3F, 0x3F, 0x3F, 0x0F, 
0x8F, 0x17, 0x07, 0x0F, 0x5F, 0x27, 0x7F, 0xBF, 0xC7, 0x97, 0x8F, 0x47, 
0x1F, 0x8F, 0x1F, 0x3F, 0x4F, 0x1F, 0x87, 0x1F, 0x0F, 0x7F, 0x7F, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x4A, 0x02, 0x80, 0x0C, 0x00, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0x10, 0x00, 0x43, 0x67, 0x72, 0xFF, 0xE7, 0xC9, 
0x40, 0x13, 0x06, 0xF6, 0xFF, 0xFF, 0xFF, 0xFF, 0xAC, 0x00, 0x00, 0x00, 
0xC0, 0xE7, 0xFF, 0x8F, 0xAB, 0x09, 0x00, 0x00, 0x40, 0x18, 0x0C, 0xFF, 
0xFF, 0x3F, 0x4F, 0x47, 0x00, 0x40, 0x80, 0x00, 0xA1, 0xFF, 0xFF, 0xFF, 
0xFF, 0x37, 0x07, 0x07, 0x07, 0x07, 0x87, 0x07, 0x0F, 0x45, 0x70, 0x60, 
0x70, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xB3, 0x34, 0x00, 0x00, 0x06, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x05, 0x00, 0x1C, 0x08, 0x9F, 0x8A, 0x0A, 
0x04, 0x04, 0x20, 0x7B, 0xFF, 0xFF, 0xFF, 0xCF, 0x07, 0x00, 0x00, 0x02, 
0x06, 0xEF, 0xFF, 0xFF, 0xFF, 0x0E, 0x0F, 0x0F, 0x0F, 0x1E, 0xBF, 0xFF, 
0xFC, 0xE0, 0x82, 0x0A, 0x02, 0x08, 0x00, 0x00, 0x61, 0xFF, 0xFF, 0xFF, 
0xFF, 0x0F, 0x06, 0x06, 0x07, 0x07, 0x0F, 0x8F, 0x07, 0x00, 0x38, 0xF8, 
0x7D, 0x77, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF9, 0xFC, 0xE0, 0xF0, 0xF4, 0x8F, 
0xCF, 0x0F, 0x1F, 0x0F, 0x8F, 0x0F, 0x07, 0x8F, 0x0F, 0x8F, 0x3E, 0x0E, 
0x20, 0xD0, 0xE0, 0x8E, 0x06, 0x0F, 0x2F, 0x0F, 0x68, 0xF0, 0xE0, 0x70, 
0x89, 0x8F, 0xAF, 0x8F, 0x1F, 0xC8, 0xE0, 0xC0, 0x90, 0xC0, 0xE9, 0xEF, 
0xCF, 0x6F, 0x8F, 0x8B, 0x04, 0x00, 0x80, 0xF0, 0xE0, 0x8F, 0x8F, 0x0F, 
0x8F, 0x1F, 0x0F, 0x8E, 0x8F, 0x1F, 0x9F, 0x8F, 0x0E, 0x0F, 0xE6, 0xF8, 
0xF0, 0xFE, 0xF7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFE, 0xFF, 0xEF, 0x8E, 0x1F, 0x0F, 0x3F, 0xF0, 0xE0, 0xF9, 0xF8, 
0xF8, 0xFA, 0xF1, 0xF1, 0xE1, 0xE1, 0xE0, 0xE0, 0xE2, 0xE1, 0xF8, 0x60, 
0x07, 0x03, 0x0F, 0x41, 0x60, 0xED, 0xE9, 0xE3, 0xF1, 0x0F, 0x0F, 0x1F, 
0x0E, 0x8F, 0x4F, 0x17, 0xF1, 0xF1, 0xE0, 0xF1, 0xF0, 0x2F, 0x0F, 0x0F, 
0x1F, 0x54, 0xD0, 0xF0, 0xE9, 0xE0, 0xA2, 0x03, 0x0F, 0x0F, 0x2F, 0x85, 
0x93, 0xC7, 0xE0, 0xE0, 0xE8, 0xF2, 0xF3, 0xE3, 0xF9, 0xE1, 0xE9, 0xE5, 
0x71, 0x13, 0x7F, 0xBF, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFE, 0xFC, 0xF7, 0xF7, 0xC7, 0x89, 0x03, 
0x03, 0x73, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xD5, 0x01, 0x01, 0x01, 0xC0, 
0x01, 0x00, 0x00, 0x7E, 0xFC, 0xFF, 0xFF, 0xFF, 0xFB, 0xF0, 0xE0, 0xF0, 
0xF1, 0xF1, 0xF8, 0xF0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x92, 0x00, 0x00, 
0x40, 0xE2, 0xEF, 0xFF, 0xFF, 0xFF, 0xDF, 0x0C, 0x00, 0x80, 0x80, 0x09, 
0x3F, 0x7F, 0xFF, 0xFF, 0xFB, 0xE1, 0xE1, 0xE0, 0xC0, 0xF0, 0xC1, 0x83, 
0x02, 0x76, 0x7C, 0x7C, 0x1E, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x58, 0x8A, 0x00, 
0x20, 0xF6, 0xFF, 0xFF, 0xFF, 0xFF, 0xF7, 0x60, 0x00, 0x00, 0xCF, 0x8D, 
0x2A, 0x01, 0x00, 0x3C, 0xFF, 0xFF, 0xFF, 0xFF, 0xDD, 0xC1, 0x81, 0x01, 
0xA3, 0x01, 0xC1, 0x51, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x10, 0x08, 0x00, 
0x02, 0x19, 0xFF, 0xFF, 0xFF, 0xFF, 0xDB, 0x00, 0x04, 0x01, 0x01, 0xF0, 
0xE1, 0xE0, 0xE0, 0xC8, 0xE1, 0xE3, 0xE3, 0xF3, 0xFF, 0xFF, 0xFF, 0x7F, 
0xBF, 0x81, 0x88, 0xC4, 0xA7, 0x9F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFD, 0xFC, 
0xFE, 0xF2, 0xF1, 0x81, 0xF1, 0xE3, 0xE3, 0xF8, 0xFC, 0xFC, 0xFE, 0xFE, 
0xFE, 0xFC, 0xF8, 0xEA, 0xC7, 0xF1, 0x85, 0xF1, 0xC5, 0xF5, 0xFC, 0xFE, 
0xFD, 0xFE, 0xF2, 0xFC, 0xE3, 0xF3, 0xE3, 0xE3, 0xE5, 0xF0, 0xFC, 0xFC, 
0xFE, 0xD2, 0xE3, 0xE3, 0xD3, 0xE3, 0xE3, 0xE4, 0xFE, 0xF9, 0xF0, 0xE1, 
0xE1, 0xD5, 0xC3, 0xE1, 0xE7, 0xF3, 0xC1, 0xE1, 0xF9, 0xF9, 0xF0, 0xFD, 
0xF8, 0xFC, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF
};

void show()    // delay function for display
{
  delay(4000);
}

void setup()
{
  lcd.begin();
  
    // Add the smiley to position "0" of the ASCII table...
    lcd.createChar(0, glyph);
}

void loop()
{
    // test setCursor and print text
  lcd.setCursor (0,2);
  lcd.print ("  PCF8814  LCD  ");
  lcd.setCursor (0,4);
  lcd.print ("  DISPLAY TEST  ");
  show();
  lcd.clear();
  
    // test drawPict and contrast decrease and then invert the pixel
  lcd.drawPict(0,0,logo);
  show();
  lcd.setContrast(1);  // decrease the contrast
  show();
  lcd.setInverse(true);
  show();
  
    // refresh function to reset contrast and pixel mode change to default
  lcd.refresh();
  
    // calling function to set cursor to zero position (x=0, y=0)
  lcd.home();
  lcd.print("Test clear line");
  
    // test clearing last printed line
  lcd.setCursor(0,2);
  lcd.print("line to remove");
  show();
  lcd.clearLine();
  show();
  lcd.clear();
  
    // test display rotate/miroring function
    // some number model not support x axis mirroring
  lcd.home();
  lcd.print("Test rotation");
  show();
  lcd.clear();
  lcd.rotate(true);
  lcd.print("Test rotation");
  show();
  lcd.clear();
  lcd.rotate(false);
  
    // test create and draw custom character to column/lines
  lcd.home();
  lcd.print("Test drawColumn");
  delay(2000);
  
    lcd.write(' ');
    lcd.write(0);  // write the smiley
  show();
  lcd.clear();
  
  lcd.setCursor (0,2);
  lcd.print ("    ENDING OF   ");
  lcd.setCursor (0,4);
  lcd.print ("  DISPLAY TEST  ");
  show();
  lcd.clear();
  show();
}